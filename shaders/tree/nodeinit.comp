#version 440 core

#include "common/bindings.glsl"

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

// octree buffer
struct octreeBuffer {
	uint id;
};

layout (std430, binding = OCTREE_BINDING) buffer octreeBlock {
	octreeBuffer octree[];
};

uniform uint u_num;
uniform uint u_allocStart;

void main()
{
	// retrieve current thread id and return if out of bounds
	uint threadId = gl_GlobalInvocationID.y * 1024 + gl_GlobalInvocationID.x;
	if (threadId >= u_num)
		return;

	octree[u_allocStart + threadId].id = 0;
}
